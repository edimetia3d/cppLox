
// clang-format off
// DO NOT EDIT: this file is generated by nodes_code_writer.py at 08/07/2021, 15:50:21
// The file in source tree will only be used when python3 is not found by cmake, and might be out of sync.

#include "lox/lox_object/lox_object.h"
namespace lox{
class BinaryState;
class GroupingState;
class LiteralState;
class UnaryState;
class VariableState;

class ExprVisitor {

protected:

friend class BinaryState;
virtual object::LoxObject Visit(BinaryState *) = 0;

friend class GroupingState;
virtual object::LoxObject Visit(GroupingState *) = 0;

friend class LiteralState;
virtual object::LoxObject Visit(LiteralState *) = 0;

friend class UnaryState;
virtual object::LoxObject Visit(UnaryState *) = 0;

friend class VariableState;
virtual object::LoxObject Visit(VariableState *) = 0;

};

class ExprState {
 public:
  virtual ~ExprState() {}
  
  virtual object::LoxObject Accept(ExprVisitor * visitor) = 0;

};



class BinaryState:public ExprState
{
public:
explicit BinaryState(Expr left,Token op,Expr right)
:left(std::move(left)),
op(std::move(op)),
right(std::move(right)){}
Expr left;
Token op;
Expr right;

object::LoxObject Accept(ExprVisitor * visitor) override {
  return visitor->Visit(this);
}
};

class GroupingState:public ExprState
{
public:
explicit GroupingState(Expr expression)
:expression(std::move(expression)){}
Expr expression;

object::LoxObject Accept(ExprVisitor * visitor) override {
  return visitor->Visit(this);
}
};

class LiteralState:public ExprState
{
public:
explicit LiteralState(Token value)
:value(std::move(value)){}
Token value;

object::LoxObject Accept(ExprVisitor * visitor) override {
  return visitor->Visit(this);
}
};

class UnaryState:public ExprState
{
public:
explicit UnaryState(Token op,Expr right)
:op(std::move(op)),
right(std::move(right)){}
Token op;
Expr right;

object::LoxObject Accept(ExprVisitor * visitor) override {
  return visitor->Visit(this);
}
};

class VariableState:public ExprState
{
public:
explicit VariableState(Token name)
:name(std::move(name)){}
Token name;

object::LoxObject Accept(ExprVisitor * visitor) override {
  return visitor->Visit(this);
}
};


} // namespace lox
// clang-format on
